[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "selenium_scraper"
version = "0.1.0"
description = "Tool to speed up writing Selenium parsers"
authors = ["Nikita Paramonov <nikita@nparamonov.ru>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{include = "selenium_scraper"}]
repository = "https://github.com/nparamonov/SeleniumScraper"

[tool.poetry.dependencies]
python = "^3.10"
selenium = "^4.15"
psutil = "^5.9"
beautifulsoup4 = "^4.12"
lxml = "^4.9"

[tool.poetry.group.tests.dependencies]
pytest = "^7.4"
uvicorn = "^0.23"
fastapi = {version = "^0.100", extras = ["all"]}
requests = "^2.31"
coverage = {version = "^7", extras = ["toml"]}

[tool.poetry.group.docs.dependencies]
sphinx = "7.0.1"
sphinx-copybutton = "0.5.2"
furo = "2023.5.20"

[tool.poetry.group.linters.dependencies]
mypy = "1.7.1"
ruff = "0.1.6"
types-requests = "^2.31.0.10"
types-psutil = "^5.9.5.17"
types-beautifulsoup4 = "^4.12.0.7"

[tool.pytest.ini_options]
log_cli = true

[tool.coverage.run]
source = ["selenium_scraper"]
command_line = "-m pytest tests -v"
data_file = ".coverage/coverage"

[tool.coverage.report]
fail_under = 80
show_missing = true

[tool.coverage.html]
directory = ".coverage/htmlcov"

[tool.coverage.xml]
output = ".coverage/coverage.xml"

[tool.coverage.json]
output = ".coverage/coverage.json"

[tool.mypy]
pretty = true
show_column_numbers = true
color_output = true

disallow_any_generics = true
disallow_untyped_defs = true

warn_unreachable = true
warn_redundant_casts = true
warn_unused_ignores = true

allow_redefinition = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
    "F", # Pyflakes
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "YTT", # flake8-2020
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "T10", # flake8-debugger
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "PERF", # Perflint
    "FURB", # refurb
    "LOG", # flake8-logging
    "RUF" # Ruff-specific rules
]
ignore = [
    "D100", # undocumented-public-module
    "D104" # undocumented-public-package
]
extend-exclude = [ "docs/source/conf.py"]
namespace-packages = ["tests/web_app"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"] # unused-import
"tests*" = [
    "S101", # assert
    "PLR2004" # magic-value-comparison
]

[tool.ruff.pydocstyle]
convention = "google"
